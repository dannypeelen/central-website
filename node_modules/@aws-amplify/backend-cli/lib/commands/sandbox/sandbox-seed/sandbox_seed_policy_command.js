import { printer } from '@aws-amplify/cli-core';
import { generateSeedPolicyTemplate } from '../../../seed-policy-generation/generate_seed_policy_template.js';
/**
 * Command that generates policy template with permissions to be able to run seed in sandbox environment
 */
export class SandboxSeedGeneratePolicyCommand {
    backendIdResolver;
    /**
     * @inheritDoc
     */
    command;
    /**
     * @inheritDoc
     */
    describe;
    /**
     * Generates policy to run seed, is a subcommand of seed
     */
    constructor(backendIdResolver) {
        this.backendIdResolver = backendIdResolver;
        this.command = 'generate-policy';
        this.describe = 'Generates policy for seeding';
    }
    /**
     * @inheritDoc
     */
    handler = async () => {
        const backendId = await this.backendIdResolver.resolve();
        const policyDocument = await generateSeedPolicyTemplate(backendId);
        printer.print(JSON.stringify(policyDocument.toJSON(), null, 2));
    };
    /**
     * @inheritDoc
     */
    builder = (yargs) => {
        return yargs;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveF9zZWVkX3BvbGljeV9jb21tYW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbW1hbmRzL3NhbmRib3gvc2FuZGJveC1zZWVkL3NhbmRib3hfc2VlZF9wb2xpY3lfY29tbWFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFaEQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0VBQWtFLENBQUM7QUFFOUc7O0dBRUc7QUFDSCxNQUFNLE9BQU8sZ0NBQWdDO0lBY2Q7SUFiN0I7O09BRUc7SUFDTSxPQUFPLENBQVM7SUFFekI7O09BRUc7SUFDTSxRQUFRLENBQVM7SUFFMUI7O09BRUc7SUFDSCxZQUE2QixpQkFBMkM7UUFBM0Msc0JBQWlCLEdBQWpCLGlCQUFpQixDQUEwQjtRQUN0RSxJQUFJLENBQUMsT0FBTyxHQUFHLGlCQUFpQixDQUFDO1FBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsOEJBQThCLENBQUM7SUFDakQsQ0FBQztJQUVEOztPQUVHO0lBQ0gsT0FBTyxHQUFHLEtBQUssSUFBbUIsRUFBRTtRQUNsQyxNQUFNLFNBQVMsR0FBRyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN6RCxNQUFNLGNBQWMsR0FBRyxNQUFNLDBCQUEwQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ25FLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEUsQ0FBQyxDQUFDO0lBRUY7O09BRUc7SUFDSCxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQUUsRUFBRTtRQUN4QixPQUFPLEtBQUssQ0FBQztJQUNmLENBQUMsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXJndiwgQ29tbWFuZE1vZHVsZSB9IGZyb20gJ3lhcmdzJztcbmltcG9ydCB7IHByaW50ZXIgfSBmcm9tICdAYXdzLWFtcGxpZnkvY2xpLWNvcmUnO1xuaW1wb3J0IHsgU2FuZGJveEJhY2tlbmRJZFJlc29sdmVyIH0gZnJvbSAnLi4vc2FuZGJveF9pZF9yZXNvbHZlci5qcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZVNlZWRQb2xpY3lUZW1wbGF0ZSB9IGZyb20gJy4uLy4uLy4uL3NlZWQtcG9saWN5LWdlbmVyYXRpb24vZ2VuZXJhdGVfc2VlZF9wb2xpY3lfdGVtcGxhdGUuanMnO1xuXG4vKipcbiAqIENvbW1hbmQgdGhhdCBnZW5lcmF0ZXMgcG9saWN5IHRlbXBsYXRlIHdpdGggcGVybWlzc2lvbnMgdG8gYmUgYWJsZSB0byBydW4gc2VlZCBpbiBzYW5kYm94IGVudmlyb25tZW50XG4gKi9cbmV4cG9ydCBjbGFzcyBTYW5kYm94U2VlZEdlbmVyYXRlUG9saWN5Q29tbWFuZCBpbXBsZW1lbnRzIENvbW1hbmRNb2R1bGU8b2JqZWN0PiB7XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgY29tbWFuZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgZGVzY3JpYmU6IHN0cmluZztcblxuICAvKipcbiAgICogR2VuZXJhdGVzIHBvbGljeSB0byBydW4gc2VlZCwgaXMgYSBzdWJjb21tYW5kIG9mIHNlZWRcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgYmFja2VuZElkUmVzb2x2ZXI6IFNhbmRib3hCYWNrZW5kSWRSZXNvbHZlcikge1xuICAgIHRoaXMuY29tbWFuZCA9ICdnZW5lcmF0ZS1wb2xpY3knO1xuICAgIHRoaXMuZGVzY3JpYmUgPSAnR2VuZXJhdGVzIHBvbGljeSBmb3Igc2VlZGluZyc7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gIGhhbmRsZXIgPSBhc3luYyAoKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgY29uc3QgYmFja2VuZElkID0gYXdhaXQgdGhpcy5iYWNrZW5kSWRSZXNvbHZlci5yZXNvbHZlKCk7XG4gICAgY29uc3QgcG9saWN5RG9jdW1lbnQgPSBhd2FpdCBnZW5lcmF0ZVNlZWRQb2xpY3lUZW1wbGF0ZShiYWNrZW5kSWQpO1xuICAgIHByaW50ZXIucHJpbnQoSlNPTi5zdHJpbmdpZnkocG9saWN5RG9jdW1lbnQudG9KU09OKCksIG51bGwsIDIpKTtcbiAgfTtcblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gIGJ1aWxkZXIgPSAoeWFyZ3M6IEFyZ3YpID0+IHtcbiAgICByZXR1cm4geWFyZ3M7XG4gIH07XG59XG4iXX0=