import { AmplifyUserError, FilePathExtractor, } from '@aws-amplify/platform-core';
import { dirname, join } from 'path';
/**
 * Resolve JS Resolver Handler or Sql Reference Handler entry path to absolute path
 * @param entry handler entry
 * @returns resolved absolute file path
 */
export const resolveEntryPath = (entry) => {
    const unresolvedImportLocationError = new AmplifyUserError('UnresolvedEntryPathError', {
        message: 'Could not determine import path to construct absolute code path from relative path: ' +
            JSON.stringify(entry),
        resolution: 'Consider using an absolute path instead.',
    });
    if (typeof entry === 'string') {
        return entry;
    }
    const filePath = new FilePathExtractor(entry.importLine).extract();
    if (filePath) {
        return join(dirname(filePath), entry.relativePath);
    }
    throw unresolvedImportLocationError;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZV9lbnRyeV9wYXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3Jlc29sdmVfZW50cnlfcGF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsZ0JBQWdCLEVBQ2hCLGlCQUFpQixHQUNsQixNQUFNLDRCQUE0QixDQUFDO0FBQ3BDLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBSXJDOzs7O0dBSUc7QUFDSCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLEtBQXNCLEVBQVUsRUFBRTtJQUNqRSxNQUFNLDZCQUE2QixHQUFHLElBQUksZ0JBQWdCLENBQ3hELDBCQUEwQixFQUMxQjtRQUNFLE9BQU8sRUFDTCxzRkFBc0Y7WUFDdEYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDdkIsVUFBVSxFQUFFLDBDQUEwQztLQUN2RCxDQUNGLENBQUM7SUFFRixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRSxDQUFDO1FBQzlCLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELE1BQU0sUUFBUSxHQUFHLElBQUksaUJBQWlCLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ25FLElBQUksUUFBUSxFQUFFLENBQUM7UUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxNQUFNLDZCQUE2QixDQUFDO0FBQ3RDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFtcGxpZnlVc2VyRXJyb3IsXG4gIEZpbGVQYXRoRXh0cmFjdG9yLFxufSBmcm9tICdAYXdzLWFtcGxpZnkvcGxhdGZvcm0tY29yZSc7XG5pbXBvcnQgeyBkaXJuYW1lLCBqb2luIH0gZnJvbSAncGF0aCc7XG5pbXBvcnQgdHlwZSB7IEpzUmVzb2x2ZXJFbnRyeSB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9kYXRhLXNjaGVtYS10eXBlcyc7XG5pbXBvcnQgeyBBbXBsaWZ5RGF0YUVycm9yIH0gZnJvbSAnLi90eXBlcy5qcyc7XG5cbi8qKlxuICogUmVzb2x2ZSBKUyBSZXNvbHZlciBIYW5kbGVyIG9yIFNxbCBSZWZlcmVuY2UgSGFuZGxlciBlbnRyeSBwYXRoIHRvIGFic29sdXRlIHBhdGhcbiAqIEBwYXJhbSBlbnRyeSBoYW5kbGVyIGVudHJ5XG4gKiBAcmV0dXJucyByZXNvbHZlZCBhYnNvbHV0ZSBmaWxlIHBhdGhcbiAqL1xuZXhwb3J0IGNvbnN0IHJlc29sdmVFbnRyeVBhdGggPSAoZW50cnk6IEpzUmVzb2x2ZXJFbnRyeSk6IHN0cmluZyA9PiB7XG4gIGNvbnN0IHVucmVzb2x2ZWRJbXBvcnRMb2NhdGlvbkVycm9yID0gbmV3IEFtcGxpZnlVc2VyRXJyb3I8QW1wbGlmeURhdGFFcnJvcj4oXG4gICAgJ1VucmVzb2x2ZWRFbnRyeVBhdGhFcnJvcicsXG4gICAge1xuICAgICAgbWVzc2FnZTpcbiAgICAgICAgJ0NvdWxkIG5vdCBkZXRlcm1pbmUgaW1wb3J0IHBhdGggdG8gY29uc3RydWN0IGFic29sdXRlIGNvZGUgcGF0aCBmcm9tIHJlbGF0aXZlIHBhdGg6ICcgK1xuICAgICAgICBKU09OLnN0cmluZ2lmeShlbnRyeSksXG4gICAgICByZXNvbHV0aW9uOiAnQ29uc2lkZXIgdXNpbmcgYW4gYWJzb2x1dGUgcGF0aCBpbnN0ZWFkLicsXG4gICAgfSxcbiAgKTtcblxuICBpZiAodHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBlbnRyeTtcbiAgfVxuXG4gIGNvbnN0IGZpbGVQYXRoID0gbmV3IEZpbGVQYXRoRXh0cmFjdG9yKGVudHJ5LmltcG9ydExpbmUpLmV4dHJhY3QoKTtcbiAgaWYgKGZpbGVQYXRoKSB7XG4gICAgcmV0dXJuIGpvaW4oZGlybmFtZShmaWxlUGF0aCksIGVudHJ5LnJlbGF0aXZlUGF0aCk7XG4gIH1cblxuICB0aHJvdyB1bnJlc29sdmVkSW1wb3J0TG9jYXRpb25FcnJvcjtcbn07XG4iXX0=